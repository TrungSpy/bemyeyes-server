     expect(response.code).to eq(200)
     jsn = JSON.parse(response.to_s)
     expect(jsn["id"]).to_not eq(nil)
-   end
+  end
+
+  it "create request and find it waiting" do
+   register_device
+   create_user
+   token = log_user_in
+
+
+    #log user out
+    logoutUser_url  = "#{@servername_with_credentials}/requests"
+    RestClient.post logoutUser_url, {'token'=> token}.to_json
+
+    r = Request.first()
+    p r.created_at
+    p r.answered
+    p r.stopped
+    wr = WaitingRequests.new
+    requests = wr.get_waiting_requests_from_lasts_2_minutes  
+    expect(requests.count).to eq(1)
+  end
 end
